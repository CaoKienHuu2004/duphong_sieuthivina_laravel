<?php

namespace App\Http\Controllers\client;

use App\Http\Controllers\Controller;
use App\Models\BientheModel;
use App\Models\GiohangModel;
use App\Models\MagiamgiaModel;
use App\Models\NguoidungModel;
use App\Models\SanphamModel;
use Illuminate\Support\Facades\Auth;
use Illuminate\Http\Request;

class GiohangController extends Controller
{
    public function index()
    {
        $id_nguoidung = Auth::id();

        // 1. T·∫£i Gi·ªè h√†ng v·ªõi Eager Loading
        $giohangItems = GiohangModel::with([
            'bienthe.sanpham',
            'bienthe.loaibienthe', 
            'bienthe.sanpham.hinhanhsanpham',
            'bienthe.sanpham.thuonghieu'
        ])
        ->where('id_nguoidung', $id_nguoidung)
        ->where('trangthai', 'Hi·ªÉn th·ªã') // Gi·∫£ s·ª≠ tr·∫°ng th√°i l√† chu·ªói 'Hi·ªÉn th·ªã'
        ->get();
        
        $tong_tien_hang = 0; // T·ªïng ti·ªÅn h√†ng (sau khi gi·∫£m gi√° s·∫£n ph·∫©m, tr∆∞·ªõc khi tr·ª´ voucher)
        $tong_giam_gia_san_pham = 0; // T·ªïng s·ªë ti·ªÅn gi·∫£m t·ª´ SP (gi√° g·ªëc - gi√° b√°n)

        // 2. L·∫∑p qua c√°c Item ƒë·ªÉ t√≠nh ƒê∆°n gi√° ƒë√£ gi·∫£m v√† t·ªïng h·ª£p Th√†nh ti·ªÅn
        $giohangItems = $giohangItems->map(function ($item) use (&$tong_tien_hang, &$tong_giam_gia_san_pham) {
            $bienthe = $item->bienthe;
            
            $giaGocDonVi = $bienthe->giagoc;
            $giamGiaPhanTram = $bienthe->sanpham->giamgia ?? 0;
            
            $giaDaGiamDonVi = $giaGocDonVi; 

            if ($giamGiaPhanTram > 0) {
                $tyLeGiam = $giamGiaPhanTram / 100;
                $giaDaGiamTam = $giaGocDonVi * (1 - $tyLeGiam);
                $giaDaGiamDonVi = round($giaDaGiamTam);
            }
            
            // T√≠nh s·ªë ti·ªÅn gi·∫£m gi√° tr√™n 1 ƒë∆°n v·ªã s·∫£n ph·∫©m
            $giamGiaDonVi = $giaGocDonVi - $giaDaGiamDonVi;

            // G√°n c√°c thu·ªôc t√≠nh m·ªõi cho View
            $item->gia_goc_don_vi = $giaGocDonVi;
            $item->gia_da_giam_don_vi = $giaDaGiamDonVi;

            // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn h√†ng (sau gi·∫£m gi√° s·∫£n ph·∫©m)
            // L∆∞u √Ω: C·ªôt 'thanhtien' ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t ch√≠nh x√°c trong h√†m themgiohang/capnhatGiohang
            $tong_tien_hang += $item->thanhtien; 
            
            // T·ªïng s·ªë ti·ªÅn gi·∫£m gi√° t·ª´ c√°c s·∫£n ph·∫©m
            $tong_giam_gia_san_pham += $giamGiaDonVi * $item->soluong;

            return $item;
        });

        // 3. X·ª≠ l√Ω Voucher (Gi·∫£m gi√° t·ªïng ƒë∆°n h√†ng)
        $voucherInfo = session('voucher'); 
        $giam_gia_voucher = 0;
        $tong_cuoi_cung = $tong_tien_hang;

        if ($voucherInfo) {
            // L·∫•y gi√° tr·ªã gi·∫£m t·ª´ Session
            $giam_gia_voucher = $voucherInfo['giam_gia']; 
            
            // T√≠nh t·ªïng cu·ªëi c√πng
            $tong_cuoi_cung = $tong_tien_hang - $giam_gia_voucher;
            if ($tong_cuoi_cung < 0) {
                $tong_cuoi_cung = 0; // ƒê·∫£m b·∫£o t·ªïng kh√¥ng √¢m
            }
        }
        
        // 4. T√≠nh t·ªïng ti·∫øt ki·ªám
        $tong_tien_giam_duoc = $tong_giam_gia_san_pham + $giam_gia_voucher;

        // 5. Truy·ªÅn d·ªØ li·ªáu v√†o View
        return view('client.thanhtoan.giohang', compact(
            'giohangItems', 
            'tong_tien_hang', // T·∫°m t√≠nh (sau gi·∫£m SP)
            'voucherInfo', 
            'giam_gia_voucher', // Gi·∫£m gi√° t·ª´ Voucher
            'tong_cuoi_cung', // T·ªïng ti·ªÅn c·∫ßn tr·∫£
            'tong_tien_giam_duoc' // T·ªïng ti·∫øt ki·ªám (SP + Voucher)
        ));
    }

    public function themgiohang(Request $request)
    {
        $request->validate([
            'id_bienthe' => 'required|exists:bienthe,id',
            'soluong' => 'required|integer|min:1',
        ]);

        $id_bienthe = $request->input('id_bienthe');
        $soluong_moi = $request->input('soluong');
        $id_nguoidung = Auth::id();
        
        $bienthe = BientheModel::with('sanpham')
        ->find($id_bienthe);
        if (!$bienthe || $bienthe->soluong < $soluong_moi) {
            return back()->with('error', 'S·∫£n ph·∫©m kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng ƒë·ªß s·ªë l∆∞·ª£ng.');
        }

        $giohangItem = GiohangModel::where('id_nguoidung', $id_nguoidung)
                                    ->where('id_bienthe', $id_bienthe)
                                    ->where('trangthai', 1)
                                    ->first();

        $giagoc = $bienthe->giagoc;
        $giadagiam = $bienthe->giagoc * (1 - $bienthe->sanpham->giamgia / 100);


        if ($giohangItem) {
            // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng v√† th√†nh ti·ªÅn
            $soluong_moi_tong = $giohangItem->soluong + $soluong_moi;
            
            // Ki·ªÉm tra l·∫°i s·ªë l∆∞·ª£ng t·ªìn kho
            if ($bienthe->soluong < $soluong_moi_tong) {
                 return back()->with('error', 'T·ªïng s·ªë l∆∞·ª£ng v∆∞·ª£t qu√° t·ªìn kho.');
            }

            $giohangItem->soluong = $soluong_moi_tong;
            $giohangItem->thanhtien = $soluong_moi_tong * $giadagiam; 
            $giohangItem->save();
            $thongbao = 'ƒê√£ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng trong gi·ªè h√†ng.';
        } else {
            // Th√™m m·ªõi v√†o gi·ªè h√†ng
            GiohangModel::create([
                'id_bienthe' => $id_bienthe,
                'id_nguoidung' => $id_nguoidung,
                'soluong' => $soluong_moi,
                'thanhtien' => $soluong_moi * $giadagiam,
                'trangthai' => 'Hi·ªÉn th·ªã',
            ]);
            $thongbao = 'ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng.';
        }


        return redirect()->route('gio-hang')->with('success', $thongbao);
    }

    public function capnhatsoluong(Request $request)
    {
        $request->validate([
            'id' => 'required|exists:giohang,id', // id c·ªßa item trong gi·ªè h√†ng
            'soluong' => 'required|integer|min:1',
        ]);

        $id_item = $request->input('id');
        $soluong_moi = $request->input('soluong');
        $id_nguoidung = Auth::id();

        $giohangItem = GiohangModel::with('bienthe.sanpham') // C·∫ßn t·∫£i sp ƒë·ªÉ t√≠nh gi√°
                                    ->where('id', $id_item)
                                    ->where('id_nguoidung', $id_nguoidung)
                                    ->where('trangthai', 1)
                                    ->first();

        if (!$giohangItem) {
            return response()->json(['nullerror' => false, 'message' => 'M·ª•c gi·ªè h√†ng kh√¥ng t·ªìn t·∫°i.'], 404);
        }

        $bienthe = $giohangItem->bienthe;
        if ($bienthe->soluong < $soluong_moi) {
            return response()->json(['stockerror' => false, 'message' => 'S·ªë l∆∞·ª£ng v∆∞·ª£t qu√° t·ªìn kho.', 'ton_kho' => $bienthe->soluong], 400);
        }

        // 1. üí∞ T√çNH L·∫†I GI√Å ƒê√É GI·∫¢M (ƒê∆°n gi√°)
        $giaGoc = $bienthe->giagoc;
        $giamGiaPhanTram = $bienthe->sanpham->giamgia ?? 0; 
        $gia_sau_giam = $giaGoc;

        if ($giamGiaPhanTram > 0) {
            $tyLeGiam = $giamGiaPhanTram / 100;
            $gia_sau_giam = round($giaGoc * (1 - $tyLeGiam));
        }

        // 2. C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng v√† Th√†nh ti·ªÅn cho Item hi·ªán t·∫°i
        $giohangItem->soluong = $soluong_moi;
        $giohangItem->thanhtien = $soluong_moi * $gia_sau_giam;
        $giohangItem->save();

        // 3. T√≠nh T·ªïng Gi·ªè h√†ng (T·ªïng ti·ªÅn c·ªßa T·∫§T C·∫¢ c√°c item)
        $tong_thanhtien_moi = GiohangModel::where('id_nguoidung', $id_nguoidung)
                                          ->where('trangthai', 1)
                                          ->sum('thanhtien');
        
        // 4. Tr·∫£ v·ªÅ JSON ƒë·ªÉ Client c·∫≠p nh·∫≠t giao di·ªán
        return response()->json([
            'success' => true,
            'message' => 'C·∫≠p nh·∫≠t gi·ªè h√†ng th√†nh c√¥ng.',
            'soluong_moi' => $soluong_moi,
            'thanh_tien_item_moi' => number_format($giohangItem->thanhtien), // Th√†nh ti·ªÅn c·ªßa item hi·ªán t·∫°i
            'tong_thanhtien_moi' => number_format($tong_thanhtien_moi),     // T·ªïng to√†n b·ªô gi·ªè h√†ng
            'gia_don_vi' => number_format($gia_sau_giam),                   // ƒê∆°n gi√° ƒë√£ gi·∫£m
        ]);
    }
}
